#author:lmr
#date  :2022-01-27
#brief :shell library of file and diretory
#notes :base on !!!bash!!!

if [ ${_include_shlib_filedirs} ]; then
    return 0
fi

. ./shlib_log

_include_shlib_filedirs=1

echo "include shlib file directory"


#brief: get files and folders
#param: path
#param: cmd
#   @f: handle file
#   @d: handle directory
#   @x: handle execute
#   @i: include follow args
#   @e: exclude follow args
#param: args
#retrn: files and folders
shlib_get_fd()
{
    #check path valid
    if [ ! -d $1 ]; then
        loge "$1 isn't valid path !"
        return -1
    fi
    
    #check cmd valid
    cmd_f=0; cmd_d=0; cmd_x=0; cmd_i=0; cmd_e=0;

    if [ $# -gt 1 ]; then
        cmd=$2
        for i in $(seq 1 ${#cmd}); do
            #logi "${i},${cmd:i-1:1}"
            case ${cmd:i-1:1} in
            "f") cmd_f=1 ;;
            "d") cmd_d=1 ;;
            "x") cmd_x=1 ;;
            "i") cmd_i=1 ; cmd_e=0 ;;
            "e") cmd_e=1 ; cmd_i=0 ;;
            *) logw "error cmd: ${cmd:i-1:1}" ;;
            esac
        done
    else
        loge "input param cnt: $#, error !"
        return -2
    fi

    #get file end directory
    all=""
    for item in $(ls $1); do
        pathitem="$1${item}"
        #logi ${pathitem}

        if [ -f ${pathitem} ] && [ ${cmd_f} == 1 ]; then
            all="${all}${item} "
        fi

        if [ -d ${pathitem} ] && [ ${cmd_d} == 1 ]; then
            all="${all}${item} "
        fi

        if [ -x ${pathitem} ] && [ ${cmd_x} == 1 ]; then
            all="${all}${item} "
        fi
    done

    logi "all, path:$1, items:${all}"

    #filter
    out=""
    for item in ${all}; do
        for arg in ${@:3}; do
            #logi "item:${item},arg:${arg}"

            #include item
            if [ ${cmd_i} == 1 ]; then
                if [ ${item} = ${arg} ]; then
                    out="${out}${item} "
                fi
            fi

            #exclude item
            if [ ${cmd_e} == 1 ]; then
                if [ ${item} != ${arg} ]; then
                    out="${out}${item} "
                fi
            fi
        done
    done
    
    logi "out, path:$1, items:${out}"
    echo ${out}

    return 0
}









